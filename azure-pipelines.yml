# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  subscription: Free Trial(1905b060-3f48-4b00-8b11-7554c4fc2492)
  resourceGroup: tfstate-rg
  storageAccount: aetfstate001sa
  container: tfstate
  tfstateFile: terraform.tfstate

steps:
- task: TerraformInstaller@0
  displayName: Install Terraform v0.14.0
  inputs:
    terraformVersion: '0.14.0'

- task: TerraformCLI@0
  displayName: Terraform Init
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/Infrastructure/azure/terraform'
    backendType: 'azurerm'
    backendServiceArm: 'Free Trial(1905b060-3f48-4b00-8b11-7554c4fc2492)'
    ensureBackend: true
    backendAzureRmResourceGroupName: '$(resourceGroup)'
    backendAzureRmResourceGroupLocation: 'australiaeast'
    backendAzureRmStorageAccountName: '$(storageAccount)'
    backendAzureRmContainerName: '$(container)'
    backendAzureRmKey: '$(tfstateFile)'
    allowTelemetryCollection: true

- task: TerraformCLI@0
  displayName: Terraform Plan
  inputs:
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/Infrastructure/azure/terraform'
    environmentServiceName: 'Free Trial(1905b060-3f48-4b00-8b11-7554c4fc2492)'
    secureVarsFile: 'azure.tfvars'
    allowTelemetryCollection: true

- task: TerraformCLI@0
  displayName: Terraform Apply
  inputs:
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/Infrastructue/azure/terraform'
    environmentServiceName: 'Free Trial(1905b060-3f48-4b00-8b11-7554c4fc2492)'
    secureVarsFile: 'azure.tfvars'
    allowTelemetryCollection: true